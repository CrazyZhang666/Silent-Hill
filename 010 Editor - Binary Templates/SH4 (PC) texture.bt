//------------------------------------------------
//--- 010 Editor v13.0.2 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

//------------------------------------------------
// simple structures (this is defining - not reading)
//------------------------------------------------

struct NumHdr {
    uint16 num_img;
    uint16 num_pal_group;
    uint32 unk0[3];
};

struct ImgHdr {
    uint32 w;
    uint32 h;
    uint16 unk;
    uint16 unk;
    uint32 unk;
};

struct PalHdr {
    uint16 unk;
    uint16 num_tex;
    uint32 num_pal;
    uint32 unk;
    uint32 size_maybe;
};

struct DXTHdr {
    ubyte TODO[112];
};

//------------------------------------------------
// complex structures
//------------------------------------------------

struct ImgBlock {
    NumHdr num_hdr;
    uint32 img_hdr_ofs[num_hdr.num_img];
    uint32 pal_hdr_ofs[num_hdr.num_pal_group];
    local uint16 i;
    for (i = 0; i < num_hdr.num_img; i++) {
        FSeek(img_hdr_ofs[i]);
        ImgHdr img_hdr;
    };
    for (i = 0; i < num_hdr.num_pal_group; i++) {
        FSeek(pal_hdr_ofs[i]);
        PalHdr pal_hdr;
    };
    DXTHdr DXT_hdr; // unk num
};

//------------------------------------------------
// parsing sequance (the acutal reading of a file)
//------------------------------------------------

ImgBlock img_block;
