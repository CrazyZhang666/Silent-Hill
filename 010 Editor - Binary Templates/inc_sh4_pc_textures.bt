//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: inc_sh4_pc_textures.bt
//   Authors: Laurynas Zubavičius (Sparagas)
//            Rodolfo Nuñez (roocker666)
//   Purpose: Silent Hill 4: The Room (Microsoft - Windows)
//  Category: Include file
//------------------------------------------------

void sh4_pc_textures() {

    struct PcImgHdr {
        ubyte  unk_0[32];
        uint32 w;
        uint32 h;
        enum {
            bgra = 21,
            DXT1 = 827611204,
            DXT3 = 861165636
        } img_fmt;
        uint32 num_mip;        // including original image
        uint32 len_mip[7];
        uint32 unk_num;        // it is not num_mip_dat
        uint32 ofs_mip_dat[7];
        uint16 unk;
        uint16 unk;
    };

    FSeek(ofs_ps2_img_pal_hdr[0] + ps2_img_pal_hdr.ps2_img_pal_hdr[0].ofs);
    struct {
        local uint16 i;
        for (i = 0; i < num_img_idx; i++) {
            FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs);
            struct {
                local uint32 j;
                for (j = 0; j < ps2_img_pal_hdr.ps2_img_pal_hdr[i].num_pal; j++)
                    PcImgHdr pc_img_pal_hdr;
            } pc_img_hdr;
        }
    } pc_img_hdr;


    struct PcImgMipDat(uint32 img_fmt, uint32 len_mip) {
        if (img_fmt == bgra)
            BGRA bgra[len_mip / 4];
        else if (img_fmt == DXT1)
            BC1_DXT1 bc1_dxt1[len_mip / 8];
        else if (img_fmt == DXT3)
            BC2_DXT3 bc2_dxt3[len_mip / 16];
    };


    FSeek(ofs_ps2_img_pal_hdr[0] + ps2_img_pal_hdr.ps2_img_pal_hdr[0].ofs
        + pc_img_hdr.pc_img_hdr[0].pc_img_pal_hdr[0].ofs_mip_dat[0]);
    struct {
        local uint32 i;
        for (i = 0; i < num_img_idx; i++) {
            FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs
                + pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[0].ofs_mip_dat[0]);
            struct {
                local uint32  j;
                for (j = 0; j < ps2_img_pal_hdr.ps2_img_pal_hdr[i].num_pal; j++) {
                    FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs
                        + pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[j].ofs_mip_dat[0] + j * 112);
                    struct {
                        local ubyte  k;
                        for (k = 0; k < pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[j].num_mip; k++) {
                            FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs
                                + pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[j].ofs_mip_dat[k] + j * 112);
                            PcImgMipDat pc_img_mip_dat(pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[j].img_fmt,
                                                       pc_img_hdr.pc_img_hdr[i].pc_img_pal_hdr[j].len_mip[k]);
                        }
                    } pc_img_pal_dat;
                }
            } pc_img_dat;
        }
    } pc_img_dat;
};
