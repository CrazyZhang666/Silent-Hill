//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: inc_sh4_xbox_textures.bt
//   Authors: Laurynas Zubavičius (Sparagas)
//            Rodolfo Nuñez (roocker666)
//   Purpose: Silent Hill 4: The Room (Microsoft - Xbox)
//  Category: Include file
//------------------------------------------------

void sh4_xbox_textures() {

    struct XboxImgIdxHdr {
        uint16 unk_1;
        uint16 unk_4;
        uint32 ofs_idx_dat;
        uint32 unk0_0;
        uint16 unk_2857;
        uint16 unk;
        uint32 unk1_0[4];
        uint32 w;
        uint32 h;
        uint32 unk_11;
        uint32 ofs_idx_dat;
        Assert(ofs_idx_dat[0] == ofs_idx_dat[1],
            "ofs_idx_dat[0] is not equal to ofs_idx_dat[1]");
    };

    FSeek(ofs_ps2_img_idx_hdr[0] + ps2_img_idx_hdr.ps2_img_idx_hdr[0].ofs);
    struct {
        local uint16 i;
        for (i = 0; i < num_img_idx; i++) {
            FSeek(ofs_ps2_img_idx_hdr[i] + ps2_img_idx_hdr.ps2_img_idx_hdr[i].ofs);
            XboxImgIdxHdr xbox_img_idx_hdr;
        }
    } xbox_img_idx_hdr;


    struct XboxImgPalHdr {
        uint16 unk_1;
        uint16 unk_3;
        uint32 ofs_pal_dat;
        uint32 unk_0[9];
        uint32 ofs_pal_dat;
        Assert(ofs_pal_dat[0] == ofs_pal_dat[1],
            "ofs_pal_dat[0] is not equal to ofs_pal_dat[1]");
    };

    FSeek(ofs_ps2_img_pal_hdr[0] + ps2_img_pal_hdr.ps2_img_pal_hdr[0].ofs);
    struct {
        local uint16 i;
        for (i = 0; i < num_img_idx; i++) {

            FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs);
            struct {
                local uint32 j;
                for (j = 0; j < ps2_img_pal_hdr.ps2_img_pal_hdr[i].num_pal; j++) {
                    XboxImgPalHdr xbox_img_pal_hdr;
                }
            } xbox_img_hdr;
        }
    } xbox_img_hdr;


    struct XboxImgIdxDat(uint32 w, uint32 h) {
        ubyte idx_8b_256[w * h];
    };

    FSeek(ofs_ps2_img_idx_hdr[0] + ps2_img_idx_hdr.ps2_img_idx_hdr[0].ofs
        + xbox_img_idx_hdr.xbox_img_idx_hdr[0].ofs_idx_dat);
    struct {
        local uint16 i;
        for (i = 0; i < num_img_idx; i++) {
            FSeek(ofs_ps2_img_idx_hdr[i] + ps2_img_idx_hdr.ps2_img_idx_hdr[i].ofs
                + xbox_img_idx_hdr.xbox_img_idx_hdr[i].ofs_idx_dat);
            XboxImgIdxDat xbox_img_idx_dat(ps2_img_idx_hdr.ps2_img_idx_hdr[i].w,
                                           ps2_img_idx_hdr.ps2_img_idx_hdr[i].h);
        }
    } xbox_img_idx_dat;


    FSeek(ofs_ps2_img_pal_hdr[0] + ps2_img_pal_hdr.ps2_img_pal_hdr[0].ofs
        + xbox_img_hdr.xbox_img_hdr[0].xbox_img_pal_hdr[0].ofs_pal_dat);
    struct {
        local uint16 i;
        for (i = 0; i < num_img_idx; i++) {
            struct {
                local uint16 j;
                for (j = 0; j < ps2_img_pal_hdr.ps2_img_pal_hdr[i].num_pal; j++) {
                    FSeek(ofs_ps2_img_pal_hdr[i] + ps2_img_pal_hdr.ps2_img_pal_hdr[i].ofs
                        + xbox_img_hdr.xbox_img_hdr[i].xbox_img_pal_hdr[j].ofs_pal_dat + 48 * j);
                    struct {
                        BGRA bgra[256];
                    } xbox_img_pal_dat;
                }
            } xbox_img_dat;
        }
    } xbox_img_dat;
};
