//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

struct Head {
    char   magic[4];
    ubyte  unk0[4];
    uint32 unk1;
    uint32 data_size;
};

struct DPND_DAT {
    uint32 count;
    local int i;
    for (i = 0; i < count; i++) {
        struct Names {
            uint16 unk_03_00;
            uint32 len;
            char   name[len];
        } name;
    };
} ;

//------------------------------------------------

struct Head EIFF_hdr;
Assert(EIFF_hdr.magic == "EIFF", "Not Silent Hill: Homecoming EIFF file");

struct EIFF_DAT {
    local char magic[4];
    ReadBytes(magic, FTell(), 4);
    if (magic == "MODL") {
        #include "shh_pc_inc-modl.bt"
    } else if (magic == "PTMC") {
        #include "shh_pc_inc-ptmc.bt"
    } else if (magic == "PGPC") {
        #include "shh_pc_inc-pgpc.bt"
    } else if (magic == "MTMC") {
        #include "shh_pc_inc-mtmc.bt"
    } else if (magic == "SCTR") {
        #include "shh_pc_inc-sctr.bt"
    } else if (magic == "LVLP") {
        #include "shh_pc_inc-lvlp.bt"
    } else if (magic == "MYSC") {
        #include "shh_pc_inc-mysc.bt"
    } else if (magic == "NAVM") {
        #include "shh_pc_inc-navm.bt"
    } else {
        struct Head unk_hdr;
        ubyte  TODO[unk_hdr.data_size];
    }
    
} EIFF_dat;
