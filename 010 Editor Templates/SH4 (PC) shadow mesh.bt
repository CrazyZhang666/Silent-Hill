//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: SH4 (PC) shadow mesh.bt
//   Authors: Hunter Stanton (hun10sta)
//   Purpose: A binary template for Silent Hill 4 PC shadow meshes (aka sgSVModel)
//------------------------------------------------

// these two are just a guess
typedef struct Polygon
{
    byte a;
    byte b;
    byte c;
    byte d;
} polygon;

typedef struct Edge
{
    byte a;
    byte b;
    byte c;
    byte d;
} edge;

typedef struct Vertex
{
    float x;
    float y;
    float z;
    int unknown; // ?? no clue what this is supposed to be
} vertex;

typedef struct Mesh
{
    local int start = FTell();

	unsigned int size; // (size of everything - the 0x20 byte bones array)? not sure why the bones arent included in this size
	unsigned int type; // this implies there could be more than one type of shadow mesh but I've only ever seen 0
	unsigned int bones_offset <format=hex>;
	unsigned int pad;
	unsigned int edges_offset <format=hex>;
	unsigned int n_edges;
	unsigned int polygons_offset <format=hex>;
	unsigned int n_polygons;
	unsigned int vertices_offset <format=hex>;
	unsigned int n_vertices;
	unsigned int normals_offset <format=hex>;
	unsigned int n_normals;

    FSeek(start + edges_offset);
    Edge edges[n_edges];

    FSeek(start + polygons_offset);
    Polygon polygons[n_polygons];

    FSeek(start + vertices_offset);
    Vertex vertices[n_vertices];

    FSeek(start + bones_offset);
    short bones[16]; // there can be more than 16 bones in a mesh, but for shadow meshes each part is limited to 16 bones
} mesh;

struct SGSVModel
{
    unsigned int type_id;
	int version;
	int type;
	unsigned int n_meshes;
	unsigned int mesh_table_offset <format=hex>;
	unsigned int n_bones;
	unsigned int matrices_offset <format=hex>;

    FSeek(mesh_table_offset);
    int offsets[n_meshes] <format=hex>;

    local int i = 0;

    for(i=0;i<n_meshes;i++)
    {
        FSeek(offsets[i]);
        Mesh meshPart;
    }
} sgSVModel;